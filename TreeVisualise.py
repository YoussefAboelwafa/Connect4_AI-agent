# # from engine import convert_from_string_to_grid




# state = {'000000000000000000000010100012120221221121': {'depth': 2, 'piece': 1, 'value': 9999009994, 'childs': 
# [{'000000000000000000000210100012120221221121': {'depth': 1, 'piece': 2, 'value': -1997209, 'childs': 
# [{'000000000000001000000210100012120221221121': {'depth': 0, 'piece': 1, 'value': -1991207, 'childs': []}}, {'000000000000000100000210100012120221221121': {'depth': 0, 'piece': 1, 'value': -1991207, 'childs': []}}, {'000000000000000000000211100012120221221121': {'depth': 0, 'piece': 1, 'value': -1997209, 'childs': []}}, {'000000000000000001000210100012120221221121': {'depth': 0, 'piece': 1, 'value': -1997209, 'childs': []}}, {'000000000000000000000210100012121221221121': {'depth': 0, 'piece': 1, 'value': -1997209, 'childs': []}}, {'000000000000000000000210101012120221221121': {'depth': 0, 'piece': 1, 'value': -1997209, 'childs': []}}, {'000000000000000000000210100112120221221121': {'depth': 0, 'piece': 1, 'value': -1997209, 'childs': []}}]}}, {'000000000000000200000010100012120221221121': {'depth': 1, 'piece': 2, 'value': -1998309, 'childs': [{'000000000000000200000110100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998308, 'childs': []}}, {'000000001000000200000010100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998308, 'childs': []}}, {'000000000000000200000011100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998309, 'childs': []}}, {'000000000000000201000010100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998309, 'childs': []}}, {'000000000000000200000010100012121221221121': {'depth': 0, 'piece': 1, 'value': -1998309, 'childs': []}}, {'000000000000000200000010101012120221221121': {'depth': 0, 'piece': 1, 'value': -1998309, 'childs': []}}, {'000000000000000200000010100112120221221121': {'depth': 0, 'piece': 1, 'value': -1998309, 'childs': []}}]}}, {'000000000000000000000012100012120221221121': {'depth': 1, 'piece': 2, 'value': -1998108, 'childs': [{'000000000000000000000112100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998108, 'childs': []}}, {'000000000000000100000012100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998108, 'childs': []}}, {'000000000000000010000012100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998108, 'childs': []}}, {'000000000000000001000012100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998108, 'childs': []}}, {'000000000000000000000012100012121221221121': {'depth': 0, 'piece': 1, 'value': -1998108, 'childs': []}}, {'000000000000000000000012101012120221221121': {'depth': 0, 'piece': 1, 'value': -1998108, 'childs': []}}, {'000000000000000000000012100112120221221121': {'depth': 0, 'piece': 1, 'value': -1998108, 'childs': []}}]}}, {'000000000000000002000010100012120221221121': {'depth': 1, 'piece': 2, 'value': -1998309, 'childs': [{'000000000000000002000110100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998308, 'childs': []}}, {'000000000000000102000010100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998308, 'childs': []}}, {'000000000000000002000011100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998309, 'childs': []}}, {'000000000010000002000010100012120221221121': {'depth': 0, 'piece': 1, 'value': -1998309, 'childs': []}}, {'000000000000000002000010100012121221221121': {'depth': 0, 'piece': 1, 'value': -1998309, 'childs': []}}, {'000000000000000002000010101012120221221121': {'depth': 0, 'piece': 1, 'value': -1998309, 'childs': []}}, {'000000000000000002000010100112120221221121': {'depth': 0, 'piece': 1, 'value': -1998309, 'childs': []}}]}}, {'000000000000000000000010100012122221221121': {'depth': 1, 'piece': 2, 'value': 9999009994, 'childs': []}}, {'000000000000000000000010102012120221221121': {'depth': 1, 'piece': 2, 'value': -1996109, 'childs': [{'000000000000000000000110102012120221221121': {'depth': 0, 'piece': 1, 'value': -1996108, 'childs': []}}, {'000000000000000100000010102012120221221121': {'depth': 0, 'piece': 1, 'value': -1996108, 'childs': []}}, {'000000000000000000000011102012120221221121': {'depth': 0, 'piece': 1, 'value': -1996109, 'childs': []}}, {'000000000000000001000010102012120221221121': {'depth': 0, 'piece': 1, 'value': -1996109, 'childs': []}}, {'000000000000000000000010102012121221221121': {'depth': 0, 'piece': 1, 'value': -1996109, 'childs': []}}, {'000000000000000000010010102012120221221121': {'depth': 0, 'piece': 1, 'value': -1996109, 'childs': []}}, {'000000000000000000000010102112120221221121': {'depth': 0, 'piece': 1, 'value': -1996109, 'childs': []}}]}}, {'000000000000000000000010100212120221221121': {'depth': 1, 'piece': 2, 'value': -1998109, 'childs': [{'000000000000000000000110100212120221221121': {'depth': 0, 'piece': 1, 'value': -1998108, 'childs': []}}, {'000000000000000100000010100212120221221121': {'depth': 0, 'piece': 1, 'value': -1998108, 'childs': []}}, {'000000000000000000000011100212120221221121': {'depth': 0, 'piece': 1, 'value': -1998109, 'childs': []}}, {'000000000000000001000010100212120221221121': {'depth': 0, 'piece': 1, 'value': -1998109, 'childs': []}}, {'000000000000000000000010100212121221221121': {'depth': 0, 'piece': 1, 'value': -1998109, 'childs': []}}, {'000000000000000000000010101212120221221121': {'depth': 0, 'piece': 1, 'value': -1998109, 'childs': []}}, {'000000000000000000001010100212120221221121': {'depth': 0, 'piece': 1, 'value': -1998109, 'childs': []}}]}}]}}

# # Inside the ConnectFour class
class TreeNode:
    def __init__(self, board, value, parent=None):
        self.board = board
        self.value = value
        self.parent = parent
        self.children = []

    def add_child(self, child):
        self.children.append(child)

    def get_board(self):
        return self.board
    def get_val(self):
        return self.value

        

    
# # def print_tree(tree, indent=0):
# #     state=list(tree.keys())[0]
    
# #     print("    " * indent + f"{state} | Depth: {tree[state]['depth']}, Piece: {tree[state]['piece']}, Value: {tree[state]['value']}")
# #     childs=tree[state]['childs']
# #     for child in childs:
# #         print_tree(child,indent+1)

# def print_tree(tree,indent=0):
#     print("     "*indent,tree.get_board(),tree.get_val())
#     for child in tree.children:
#         print_tree(child,indent+1)
# def main():
#     root=convert_state_to_tree(state)
#     print(root)
#     print_tree(root)
# if __name__ == '__main__':
#     main()
    
    
